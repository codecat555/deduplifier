version: "3.8"
services:
  web:
    container_name: web
    working_dir: ___CODE_PATH___
    restart: always
    environment:
      - TZ=___TIMEZONE___
    build:
        context: .
        dockerfile: web-Dockerfile
    volumes:
      #- .:___CODE_PATH___
      - ..:___APP_PATH___
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    ports:
      - ___WEB_EXTERNAL_PORT___:___WEB_INSTANCE_PORT___
    depends_on:
      - db

  # some port config hints found at https://stackoverflow.com/questions/37775702/changing-a-postgres-containers-server-port-in-docker-compose
  db:
    container_name: db
    # increase shared memory size from default of 64MB.
    # see https://stackoverflow.com/questions/56751565/pq-could-not-resize-shared-memory-segment-no-space-left-on-device
    shm_size: 1g
    working_dir: ___APP_PATH___
    restart: always
    volumes:
      #- ./sql/init.sql:/docker-entrypoint-initdb.d/init.sql
      #- /etc/localtime:/etc/localtime:ro
      #- /etc/timezone:/etc/timezone:ro
      ## cannot use remote filesystem for db files, because sshfs freezes for some reason. so,
      ## we don't mount the APP_PATH but just the CODE_PATH.
      ##- ___APP_PATH___:___APP_PATH___
      #- ___CODE_PATH___:___CODE_PATH___
      #- type: bind
      #  source: ___APP_PATH___
      #  target: ___APP_PATH___
      #  volume:
      #    nocopy: true
      - type: bind
        source: ___CODE_PATH___
        target: ___CODE_PATH___
        volume:
          nocopy: true
      - type: bind
        source: ./sql/init.sql
        target: /docker-entrypoint-initdb.d/init.sql
        volume:
          nocopy: true
      - type: bind
        source: /etc/localtime
        target: /etc/localtime
        read_only: true
        volume:
          nocopy: true
      - type: bind
        source: /etc/timezone
        target: /etc/timezone
        read_only: true
        volume:
          nocopy: true
    build:
      context: .
      dockerfile: db-Dockerfile
    environment:
      - TZ=___TIMEZONE___
      - PGDATA=___DB_PATH___
      - PGPORT=___DB_INSTANCE_PORT___
      - POSTGRES_DB=___DB_NAME___
      - POSTGRES_USER=___DB_USER___
      - POSTGRES_PASSWORD=___DB_USER___
      # use trust during development, modify on deployment
      - POSTGRES_HOST_AUTH_METHOD=trust
    expose:
      - ___DB_INSTANCE_PORT___ # export post to other containers (not to host)
    ports:
      - ___DB_EXTERNAL_PORT___:___DB_INSTANCE_PORT___ # map external port to internal port

# get this working later...
# see https://www.pgadmin.org/docs/pgadmin4/latest/container_deployment.html
#  pgadmin:
#    services:
#      pgadmin:
#        container_name: pgadmin
#        image: dpage/pgadmin4:latest
#        restart: always
#        ports:
#          - 8082:80
#        environment:
#          - PGADMIN_DEFAULT_EMAIL=dev@pgadmin.org
#          - PGADMIN_DEFAULT_PASSWORD=password
  redis:
      container_name: cache
      image: redis:alpine

